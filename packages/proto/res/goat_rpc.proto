syntax = "proto3";

package goat_rpc;

message Send {
  oneof kind {
    Request request = 1;
    Subscribe subscribe = 2;
    Unsubscribe unsubscribe = 3;
  }
}

message Request {
  uint32 send_id = 1;
  string key = 2;
  map<string, string> metadata = 3;
  string text_data = 4;
  bytes binary_data = 5;
}

message Subscribe {
  uint32 send_id = 1;
  string key = 2;
  map<string, string> metadata = 3;
  string text_data = 4;
  bytes binary_data = 5;
}

message Unsubscribe {
  uint32 send_id = 1;
  uint32 source_send_id = 2;
}

message Receive {
  oneof kind {
    Error error = 1;
    Response response = 2;
    SubscriptionInfo subscription_info = 3;
    SubscriptionEvent subscription_event = 4;
    UnsubscriptionInfo unsubscription_info = 5;
  }
}

message Error {
  uint32 receive_id = 1;
  uint32 source_send_id = 2;
  uint32 code = 3;
  string reason = 4;
}

message Response {
  uint32 receive_id = 1;
  uint32 source_send_id = 2;
  map<string, string> metadata = 3;
  string text_data = 4;
  bytes binary_data = 5;
}

message SubscriptionInfo {
  uint32 receive_id = 1;
  uint32 source_send_id = 2;
  map<string, string> metadata = 3;
  string text_data = 4;
  bytes binary_data = 5;
}

message SubscriptionEvent {
  uint32 receive_id = 1;
  uint32 source_send_id = 2;
  map<string, string> metadata = 3;
  string text_data = 4;
  bytes binary_data = 5;
}

message UnsubscriptionInfo {
  uint32 receive_id = 1;
  uint32 source_send_id = 2;
  map<string, string> metadata = 3;
  string text_data = 4;
  bytes binary_data = 5;
}
